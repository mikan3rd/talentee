generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  uuid            String            @id @default(uuid())
  displayName     String
  username        String            @unique
  thumbnailUrl    String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  youtubeChannels youtubeChannels[]
}

model youtube_channels_keywords {
  channel_id      String
  keyword_id      Int
  youtubeChannels youtubeChannels @relation(fields: [channel_id], references: [id])
  youtubeKeywords youtubeKeywords @relation(fields: [keyword_id], references: [id])

  @@id([channel_id, keyword_id])
  @@index([channel_id], name: "IDX_4ace088512d4393091961ddbc8")
  @@index([keyword_id], name: "IDX_a3367a144a2ab2c9a0c4595261")
}

model youtube_videos_tags {
  video_id      String
  tag_id        Int
  youtubeTags   youtubeTags   @relation(fields: [tag_id], references: [id])
  youtubeVideos youtubeVideos @relation(fields: [video_id], references: [id])

  @@id([video_id, tag_id])
  @@index([tag_id], name: "IDX_69e4109d8b91ace4984014783d")
  @@index([video_id], name: "IDX_beaad95f284f426e23c4f2a457")
}

model youtubeChannels {
  id                        String                      @id
  title                     String
  description               String
  thumbnailUrl              String
  country                   String
  publishedAt               DateTime
  subscriberCount           Int?
  viewCount                 Int
  videoCount                Int
  hiddenSubscriberCount     Int
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @default(now())
  accountId                 String
  accounts                  accounts                    @relation(fields: [accountId], references: [uuid])
  youtube_channels_keywords youtube_channels_keywords[]
  youtubeVideos             youtubeVideos[]

  @@index([accountId], name: "FK_c6ae27acf3bf4ab1d0dd04480db")
}

model youtubeKeywords {
  id                        Int                         @id @default(autoincrement())
  title                     String                      @unique
  num                       Int                         @default(0)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @default(now())
  youtube_channels_keywords youtube_channels_keywords[]
}

model youtubeTags {
  id                  Int                   @id @default(autoincrement())
  title               String                @unique
  num                 Int                   @default(0)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now())
  youtube_videos_tags youtube_videos_tags[]
}

model youtubeVideoCategories {
  id            Int             @id
  title         String
  assignable    Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  youtubeVideos youtubeVideos[]
}

model youtubeVideos {
  id                     String                 @id
  title                  String
  description            String
  thumbnailUrl           String
  publishedAt            DateTime
  viewCount              Int
  likeCount              Int?
  dislikeCount           Int?
  commentCount           Int?
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @default(now())
  videoCategoryId        Int
  channelId              String
  youtubeChannels        youtubeChannels        @relation(fields: [channelId], references: [id])
  youtubeVideoCategories youtubeVideoCategories @relation(fields: [videoCategoryId], references: [id])
  youtube_videos_tags    youtube_videos_tags[]

  @@index([channelId], name: "FK_9fcdb53c5c16b6cade2b22fa506")
  @@index([videoCategoryId], name: "FK_cf836d2aa8585ef730366e3f01a")
}
